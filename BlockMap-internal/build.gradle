apply plugin: "com.jaredsburrows.license"

task downloadFiles(type: JavaExec) {
	group 'Generation'
	description 'Download required files that are not in the repository for technical or legal reasons (e.g. the minecraft server jar)'
	classpath = sourceSets.main.runtimeClasspath
	main = "de.piegames.blockmap.generate.Generator"
	args = ['downloadFiles']
    inputs.file "${project(":BlockMap-internal").sourceSets.main.resources.srcDirs[0]}/1.13.2.json"
    outputs.files "${buildDir}/generated-resources/BlockMap-internal/generated-resources-main/client.jar", 
    			"${buildDir}/generated-resources/BlockMap-internal/generated-resources-main/server.jar"
}

task extractMinecraftData(type: JavaExec) {
	dependsOn 'downloadFiles'
	group 'Generation'
	description 'Extract blocks.json (containing information about all blocks and block states) from the server jar using its data generator'
	classpath = sourceSets.main.runtimeClasspath
	main = "de.piegames.blockmap.generate.Generator"
	args = ['extractData']
    inputs.dir "${project(":BlockMap-internal").sourceSets.main.java.srcDirs[1]}/server.jar"
    outputs.dir "${buildDir}/generated-resources/BlockMap-internal/generated-resources-main/data/"
}

task generateBlockStates(type: JavaExec) {
	dependsOn 'extractMinecraftData'
	group 'Generation'
	description 'Generate all enum values from BlockState.java'
	classpath = sourceSets.main.runtimeClasspath
	main = "de.piegames.blockmap.generate.Generator"
	args = ['generateBlockStates']
    inputs.dir "${project(":BlockMap-internal").sourceSets.main.java.srcDirs[0]}/de/piegames/blockmap/generate/"
    inputs.file "${project(":BlockMap-internal").sourceSets.main.resources.srcDirs[1]}"
    outputs.dir "${buildDir}/generated-resources/other/"
}

task generateData(type: JavaExec) {
	dependsOn 'downloadFiles'
	group 'Generation'
	description 'Generate color maps and other files using the Minecraft resource pack (in client.jar) and compile it to a less abstract form'
	classpath = sourceSets.main.runtimeClasspath
	main = "de.piegames.blockmap.generate.Generator"
	args = ['generateBlockColors', 'generateBiomeColors', 'generateHeightmap']
    inputs.dir "${project(":BlockMap-internal").sourceSets.main.java.srcDirs[0]}/de/piegames/blockmap/generate/"
    inputs.file "${project(":BlockMap-internal").sourceSets.main.resources.srcDirs[0]}/block-color-instructions.json"
    inputs.file "${project(":BlockMap-internal").sourceSets.main.resources.srcDirs[0]}/biome-color-instructions.json"
    inputs.file "${project(":BlockMap-internal").sourceSets.main.resources.srcDirs[0]}/heightmap.png"
    outputs.dir "${buildDir}/generated-resources/BlockMap-core/generated-resources-main/"
}

task generateScreenshots(type: JavaExec) {
	dependsOn 'generateData'
	group 'Generation'
	description 'Automatically render certain files and create screenshots from the GUI to show off on Twitter. Takes a really long time to process because a large demo world is generated first.'
	classpath = sourceSets.main.runtimeClasspath
	main = "de.piegames.blockmap.generate.Generator"
	args = ['generateTestWorld', 'generateScreenshots']
}

dependencies {
	testCompile 'junit:junit:4.12'

	implementation project(':BlockMap-core')
	implementation project(':BlockMap-gui')
	implementation project(':BlockMap-standalone')
	implementation 'org.apache.logging.log4j:log4j-core:2.11.1'
	implementation 'commons-io:commons-io:2.6'
	implementation 'com.google.guava:guava:27.0-jre'
	implementation 'info.picocli:picocli:3.7.0'
	implementation 'com.github.Sommerlilie:MinecraftLandGenerator:5d9fa3d144'

	/* This is not an actual dependency, but some biome color data has been copied from there so it will show up in the credits list */
	// Currently broken because it does not compile on jitpack
	//implementation 'com.github.toolbox4minecraft:amidst:129d3fb9e0'
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
		resources {
			srcDirs = ['src/main/resources', "./build/generated-resources/${project.name}/generated-resources-main"]
		}
	}
	test {
		java {
			srcDirs = ['src/test/java']
		}
		resources {
			srcDirs = ['src/test/resources', "./build/generated-resources/${project.name}/generated-resources-test"]
		}
	}
}

test {
	exclude 'de/piegames/blockmap/AllTests.class'
}
